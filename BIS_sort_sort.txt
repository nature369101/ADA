#include<stdio.h>
#include<stdlib.h>
int count;
void bubblesort(int *a, int n){
    int flag = 1,temp;
    for( int i = 0; i < n-1; i++){
        for(int j = 0; j < n-i-1; j++){
             count++;
            if(a[j]>a[j+1]){
                temp = a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
                flag = 0;
            }
            
            }
            if(flag){
               // printf("Already sorted !!");
               break;
           }
        
    }
}

int tester(){
        int n;
printf("Enter the size of the array: ");
scanf("%d",&n);

int *arr = (int*)malloc(n*sizeof(int));

printf("Enter array");
 for( int i=0; i<n; i++)
  scanf("%d",&arr[i]);

for(int i=0; i<n;i++)
printf("%d ",arr[i]);

bubblesort(arr,n);
printf("\n");

for(int i=0; i<n;i++)
printf("%d ",arr[i]);

}

void plotter(){
    int *arr, n;
    FILE *f1,*f2,*f3;
    f1 = fopen("bbest.txt","w");
    f2 = fopen("bworst.txt","w");
    f3 = fopen("bavg.txt","w");
    n = 10;

    while(n<=30000){
        arr = (int*)malloc(n*sizeof(int));

        //bc
        for(int i = 0; i < n; i++){
            *(arr+i) = i + 1;
        }
        count = 0;
        bubblesort(arr,n);
        fprintf(f1,"%d\t%d\n",n,count);

       //wc
        for(int i = 0; i < n; i++){
            *(arr+i) = n - i;
        }
        count = 0;
        bubblesort(arr,n);
        fprintf(f2,"%d\t%d\n",n,count);

        //avg
        for(int i = 0; i < n; i++){
            *(arr+i) = rand()%n;
        }
        count = 0;
        bubblesort(arr,n);
        fprintf(f3,"%d\t%d\n",n,count);


        if(n<10000)
         n = n*10;
        else 
        n = n + 10000;
    }
    fclose(f1);
    fclose(f2);
    fclose(f3);
}

int main(){
    int ch;
    for(;;){
        printf("\n1. tester \n2. plotter \n Enter your choice: ");
        scanf("%d",&ch);
        switch(ch){
            case 1 : tester();
            break;
            case 2 : plotter();
            break;
            case 3: exit(0);
            default : exit(0);
        }
    }
}

#include<stdio.h>
#include<stdlib.h>

int temp,count;

void insertionsort( int *a, int n){
 for( int i = 1; i < n ; i++){
     temp = a[i];
     int j = i-1;
  while(count++ && j>=0 && temp<a[j]){
     a[j+1] = a[j];
      j--;
     }
    a[j+1] = temp;
  }

}

int tester(){
    int n;
printf("Enter the size of the array");
scanf("%d",&n);

int *arr = (int*)malloc(n*sizeof(int));

printf("Enter array");
 for( int i=0; i<n; i++)
  scanf("%d",&arr[i]);

for(int i=0; i<n;i++)
printf("%d ",arr[i]);

insertionsort(arr,n);
printf("\n");

for(int i=0; i<n;i++)
printf("%d ",arr[i]);
}

void plotter()
{
    int *arr, n;
    srand(time(NULL));
    FILE *f1, *f2, *f3;

    f1 = fopen("INSERTIONBEST.txt", "a");
    f2 = fopen("INSERTIONWORST.txt", "a");
    f3 = fopen("INSERTIONAVG.txt", "a");
    n = 10;
    while (n <= 30000)
    {
        arr = (int *)malloc(sizeof(int) * n);
        for (int i = 0; i < n; i++)
            *(arr + i) = n - i;
        count = 0;
        // worst case
        insertionSort(arr, n);
        fprintf(f2, "%d\t%d\n", n, count);
        // printf("%d\t%d\n",n,count);

        // best case
        count = 0;
        for (int i = 0; i < n; i++)
            *(arr + i) = i + 1;
        insertionSort(arr, n);
        fprintf(f1, "%d\t%d\n", n, count);
        // printf("%d\t%d\n",n,count);

        // AVG case
        for (int i = 0; i < n; i++)
            *(arr + i) = rand() % n;
        count = 0;
        insertionSort(arr, n);
        fprintf(f3, "%d\t%d\n", n, count);
        if (n < 10000)
            n = n * 10;
        else
            n = n + 10000;
        free(arr);
    }
    fclose(f1);
    fclose(f2);
    fclose(f3);
}

#include<stdio.h>
#include<stdlib.h>
int temp,min,count;
void selectionsort(int *a, int n){
    for( int i = 0;i<n-1;i++){
        min = i;
        for( int j=i+1; j<n;j++){
            if(a[j]<a[min]){
                min = j;
            }
            count++;
        }

        if(min!=i){
            temp=a[min];
            a[min]=a[i];
            a[i]=temp;
        }
    }
}

int tester(){
    int n;
    printf("enter the size of the array:");
    scanf("%d",&n);
    int *arr = (int*)malloc(n*sizeof(int));
    printf("enter the array elements");
     for( int i = 0;i<n;i++)
      scanf("%d",&arr[i]);
    
    printf("Array elements before sorting ");
     for( int i = 0;i<n;i++)
      printf("%d ",arr[i]);

    selectionsort(arr,n);
    
   printf("\n");
   printf("Array elements after sorting ");
     for( int i = 0;i<n;i++)
      printf("%d ",arr[i]);

}

void plotter(){
    int *arr, n;
    FILE *f1, *f2, *f3;
    f1 = fopen("sbest.txt","w");
    f2 = fopen("sworst.txt","w");
    f3 = fopen("savg.txt","w");
    n = 10;

    while(n<=30000){
        //bc
       arr = (int*)malloc(n*sizeof(int));
       for(int i = 0; i< n; i++)
        *(arr+i) = i + 1;
        count = 0;
        selectionsort(arr,n);
        fprintf(f1,"%d\t%d\n",n,count);
       
    //wc
        for(int i = 0; i< n; i++)
        *(arr+i) = n-i;
        count = 0;
        selectionsort(arr,n);
        fprintf(f2,"%d\t%d\n",n,count);

    //avg
        for(int i = 0; i< n; i++)
        *(arr+i) = rand()%n;
        count = 0;
        selectionsort(arr,n);
        fprintf(f3,"%d\t%d\n",n,count);

        if(n<10000)
         n= n*10;
        else 
         n = n + 10000;
    }
    fclose(f1);
    fclose(f2);
    fclose(f3);
}

int main(){
    int ch;
    for(;;){
        printf("\n1. tester \n2. plotter \n3. exit \n Enter your choice: ");
        scanf("%d",&ch);
        switch(ch){
            case 1: tester();
            break;
            case 2: plotter();
            break;
            case 3: exit(0);
            default:exit(0);
        }
    }
}